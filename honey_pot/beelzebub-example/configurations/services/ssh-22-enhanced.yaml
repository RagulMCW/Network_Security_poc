apiVersion: "v1"
protocol: "ssh"
address: ":22"
description: "SSH Interactive Honeypot - AI Powered"

# LLM Integration (GLM-4.5 via Anthropic)
llm:
  enabled: true
  provider: "anthropic"
  model: "glm-4.5"
  systemPrompt: |
    You are simulating a compromised Ubuntu 20.04 server with moderate security.
    Respond as if you are the shell of this server.
    Be realistic and occasionally reveal fake "sensitive" information to keep attackers engaged.
    Server details:
    - Hostname: prod-db-server-03
    - OS: Ubuntu 20.04.4 LTS
    - User: root
    - Current directory: /home/ubuntu
    - Installed software: Docker, MySQL, PostgreSQL, nginx
    - Fake data: config files, database dumps, SSH keys (all honeypot data)
    
    Rules:
    1. Respond to shell commands realistically
    2. Show command output that matches Linux behavior
    3. Occasionally "leak" fake credentials or file contents
    4. Keep responses concise (under 500 chars)
    5. If attacker tries something dangerous, show realistic error or fake success
    6. Never reveal you are an AI or honeypot

# Fallback commands if LLM is disabled or fails
commands:
  - regex: "^ls$"
    handler: "Documents Images Desktop Downloads .m2 .kube .ssh .docker mysql_backups"
  - regex: "^ls -la$"
    handler: |
      drwxr-xr-x 12 ubuntu ubuntu 4096 Oct 24 07:00 .
      drwxr-xr-x  3 root   root   4096 Jan 15  2024 ..
      -rw-------  1 ubuntu ubuntu 2847 Oct 23 14:22 .bash_history
      drwx------  2 ubuntu ubuntu 4096 Oct 20 09:15 .ssh
      drwxr-xr-x  3 ubuntu ubuntu 4096 Sep 10 11:30 .docker
      drwxr-xr-x  2 ubuntu ubuntu 4096 Oct 24 06:00 mysql_backups
      -rw-r--r--  1 ubuntu ubuntu  128 Oct 22 13:45 .env
  - regex: "^pwd$"
    handler: "/home/ubuntu"
  - regex: "^whoami$"
    handler: "root"
  - regex: "^id$"
    handler: "uid=0(root) gid=0(root) groups=0(root)"
  - regex: "^uname -a$"
    handler: "Linux prod-db-server-03 5.15.0-91-generic #101-Ubuntu SMP x86_64 GNU/Linux"
  - regex: "^cat /etc/passwd$"
    handler: |
      root:x:0:0:root:/root:/bin/bash
      ubuntu:x:1000:1000:Ubuntu:/home/ubuntu:/bin/bash
      mysql:x:999:999:MySQL Server:/var/lib/mysql:/bin/false
      postgres:x:998:998:PostgreSQL:/var/lib/postgresql:/bin/bash
  - regex: "^cat \\.env$"
    handler: |
      DB_HOST=localhost
      DB_USER=admin
      DB_PASS=P@ssw0rd123!
      API_KEY=sk-proj-fake123456789abcdef
  - regex: "^cat .*/id_rsa$"
    handler: |
      -----BEGIN RSA PRIVATE KEY-----
      [FAKE KEY - HONEYPOT]
      MIIEpAIBAAKCAQEA1234567890...
      -----END RSA PRIVATE KEY-----
  - regex: "^docker ps$"
    handler: |
      CONTAINER ID   IMAGE         COMMAND                  STATUS         PORTS
      a1b2c3d4e5f6   mysql:8.0     "docker-entrypoint.s…"   Up 2 days      3306/tcp
      b2c3d4e5f6a7   nginx:latest  "/docker-entrypoint.…"   Up 2 days      80/tcp
  - regex: "^netstat -tuln$"
    handler: |
      Active Internet connections
      Proto Recv-Q Send-Q Local Address           Foreign Address         State
      tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN
      tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN
      tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN
  - regex: "^(.+)$"
    handler: "bash: $1: command not found"

# Server identification
serverVersion: "OpenSSH_8.2p1"
serverName: "prod-db-server-03"

# Authentication (weak passwords to attract attackers)
passwordRegex: "^(root|toor|admin|password|123456|ubuntu)$"

# Session timeout
deadlineTimeoutSeconds: 300
